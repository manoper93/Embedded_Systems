
GccApplication6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011e  00800100  00000cb6  00000d4a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cb6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002b  0080021e  0080021e  00000e68  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e68  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ec4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000f00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c3b  00000000  00000000  00000f60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000915  00000000  00000000  00001b9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005f9  00000000  00000000  000024b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000168  00000000  00000000  00002aac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000558  00000000  00000000  00002c14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000534  00000000  00000000  0000316c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000036a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	89 c0       	rjmp	.+274    	; 0x114 <__ctors_end>
   2:	00 00       	nop
   4:	a4 c0       	rjmp	.+328    	; 0x14e <__bad_interrupt>
   6:	00 00       	nop
   8:	a2 c0       	rjmp	.+324    	; 0x14e <__bad_interrupt>
   a:	00 00       	nop
   c:	a0 c0       	rjmp	.+320    	; 0x14e <__bad_interrupt>
   e:	00 00       	nop
  10:	9e c0       	rjmp	.+316    	; 0x14e <__bad_interrupt>
  12:	00 00       	nop
  14:	9c c0       	rjmp	.+312    	; 0x14e <__bad_interrupt>
  16:	00 00       	nop
  18:	9a c0       	rjmp	.+308    	; 0x14e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	98 c0       	rjmp	.+304    	; 0x14e <__bad_interrupt>
  1e:	00 00       	nop
  20:	96 c0       	rjmp	.+300    	; 0x14e <__bad_interrupt>
  22:	00 00       	nop
  24:	94 c0       	rjmp	.+296    	; 0x14e <__bad_interrupt>
  26:	00 00       	nop
  28:	92 c0       	rjmp	.+292    	; 0x14e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	90 c0       	rjmp	.+288    	; 0x14e <__bad_interrupt>
  2e:	00 00       	nop
  30:	8e c0       	rjmp	.+284    	; 0x14e <__bad_interrupt>
  32:	00 00       	nop
  34:	8c c0       	rjmp	.+280    	; 0x14e <__bad_interrupt>
  36:	00 00       	nop
  38:	8a c0       	rjmp	.+276    	; 0x14e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	88 c0       	rjmp	.+272    	; 0x14e <__bad_interrupt>
  3e:	00 00       	nop
  40:	86 c0       	rjmp	.+268    	; 0x14e <__bad_interrupt>
  42:	00 00       	nop
  44:	84 c0       	rjmp	.+264    	; 0x14e <__bad_interrupt>
  46:	00 00       	nop
  48:	82 c0       	rjmp	.+260    	; 0x14e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	80 c0       	rjmp	.+256    	; 0x14e <__bad_interrupt>
  4e:	00 00       	nop
  50:	7e c0       	rjmp	.+252    	; 0x14e <__bad_interrupt>
  52:	00 00       	nop
  54:	7c c0       	rjmp	.+248    	; 0x14e <__bad_interrupt>
  56:	00 00       	nop
  58:	7a c0       	rjmp	.+244    	; 0x14e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	78 c0       	rjmp	.+240    	; 0x14e <__bad_interrupt>
  5e:	00 00       	nop
  60:	76 c0       	rjmp	.+236    	; 0x14e <__bad_interrupt>
  62:	00 00       	nop
  64:	74 c0       	rjmp	.+232    	; 0x14e <__bad_interrupt>
  66:	00 00       	nop
  68:	72 c0       	rjmp	.+228    	; 0x14e <__bad_interrupt>
  6a:	00 00       	nop
  6c:	70 c0       	rjmp	.+224    	; 0x14e <__bad_interrupt>
  6e:	00 00       	nop
  70:	6e c0       	rjmp	.+220    	; 0x14e <__bad_interrupt>
  72:	00 00       	nop
  74:	6c c0       	rjmp	.+216    	; 0x14e <__bad_interrupt>
  76:	00 00       	nop
  78:	d1 c2       	rjmp	.+1442   	; 0x61c <__vector_30>
  7a:	00 00       	nop
  7c:	68 c0       	rjmp	.+208    	; 0x14e <__bad_interrupt>
  7e:	00 00       	nop
  80:	66 c0       	rjmp	.+204    	; 0x14e <__bad_interrupt>
  82:	00 00       	nop
  84:	64 c0       	rjmp	.+200    	; 0x14e <__bad_interrupt>
  86:	00 00       	nop
  88:	62 c0       	rjmp	.+196    	; 0x14e <__bad_interrupt>
  8a:	00 00       	nop
  8c:	ec 02       	muls	r30, r28
  8e:	bc 02       	muls	r27, r28
  90:	cc 02       	muls	r28, r28
  92:	06 03       	mulsu	r16, r22
  94:	06 03       	mulsu	r16, r22
  96:	06 03       	mulsu	r16, r22
  98:	06 03       	mulsu	r16, r22
  9a:	06 03       	mulsu	r16, r22
  9c:	06 03       	mulsu	r16, r22
  9e:	dc 02       	muls	r29, r28
  a0:	06 03       	mulsu	r16, r22
  a2:	06 03       	mulsu	r16, r22
  a4:	06 03       	mulsu	r16, r22
  a6:	06 03       	mulsu	r16, r22
  a8:	06 03       	mulsu	r16, r22
  aa:	06 03       	mulsu	r16, r22
  ac:	06 03       	mulsu	r16, r22
  ae:	06 03       	mulsu	r16, r22
  b0:	06 03       	mulsu	r16, r22
  b2:	06 03       	mulsu	r16, r22
  b4:	76 02       	muls	r23, r22
  b6:	06 03       	mulsu	r16, r22
  b8:	06 03       	mulsu	r16, r22
  ba:	06 03       	mulsu	r16, r22
  bc:	06 03       	mulsu	r16, r22
  be:	06 03       	mulsu	r16, r22
  c0:	06 03       	mulsu	r16, r22
  c2:	06 03       	mulsu	r16, r22
  c4:	ad 02       	muls	r26, r29
  c6:	06 03       	mulsu	r16, r22
  c8:	06 03       	mulsu	r16, r22
  ca:	06 03       	mulsu	r16, r22
  cc:	06 03       	mulsu	r16, r22
  ce:	06 03       	mulsu	r16, r22
  d0:	9e 02       	muls	r25, r30
  d2:	59 02       	muls	r21, r25
  d4:	06 03       	mulsu	r16, r22
  d6:	06 03       	mulsu	r16, r22
  d8:	06 03       	mulsu	r16, r22
  da:	06 03       	mulsu	r16, r22
  dc:	06 03       	mulsu	r16, r22
  de:	06 03       	mulsu	r16, r22
  e0:	06 03       	mulsu	r16, r22
  e2:	06 03       	mulsu	r16, r22
  e4:	06 03       	mulsu	r16, r22
  e6:	06 03       	mulsu	r16, r22
  e8:	06 03       	mulsu	r16, r22
  ea:	06 03       	mulsu	r16, r22
  ec:	06 03       	mulsu	r16, r22
  ee:	06 03       	mulsu	r16, r22
  f0:	06 03       	mulsu	r16, r22
  f2:	06 03       	mulsu	r16, r22
  f4:	76 02       	muls	r23, r22
  f6:	06 03       	mulsu	r16, r22
  f8:	06 03       	mulsu	r16, r22
  fa:	06 03       	mulsu	r16, r22
  fc:	06 03       	mulsu	r16, r22
  fe:	06 03       	mulsu	r16, r22
 100:	06 03       	mulsu	r16, r22
 102:	06 03       	mulsu	r16, r22
 104:	ad 02       	muls	r26, r29
 106:	06 03       	mulsu	r16, r22
 108:	06 03       	mulsu	r16, r22
 10a:	06 03       	mulsu	r16, r22
 10c:	06 03       	mulsu	r16, r22
 10e:	06 03       	mulsu	r16, r22
 110:	9e 02       	muls	r25, r30
 112:	59 02       	muls	r21, r25

00000114 <__ctors_end>:
 114:	11 24       	eor	r1, r1
 116:	1f be       	out	0x3f, r1	; 63
 118:	cf ef       	ldi	r28, 0xFF	; 255
 11a:	d0 e1       	ldi	r29, 0x10	; 16
 11c:	de bf       	out	0x3e, r29	; 62
 11e:	cd bf       	out	0x3d, r28	; 61

00000120 <__do_copy_data>:
 120:	12 e0       	ldi	r17, 0x02	; 2
 122:	a0 e0       	ldi	r26, 0x00	; 0
 124:	b1 e0       	ldi	r27, 0x01	; 1
 126:	e6 eb       	ldi	r30, 0xB6	; 182
 128:	fc e0       	ldi	r31, 0x0C	; 12
 12a:	00 e0       	ldi	r16, 0x00	; 0
 12c:	0b bf       	out	0x3b, r16	; 59
 12e:	02 c0       	rjmp	.+4      	; 0x134 <__do_copy_data+0x14>
 130:	07 90       	elpm	r0, Z+
 132:	0d 92       	st	X+, r0
 134:	ae 31       	cpi	r26, 0x1E	; 30
 136:	b1 07       	cpc	r27, r17
 138:	d9 f7       	brne	.-10     	; 0x130 <__do_copy_data+0x10>

0000013a <__do_clear_bss>:
 13a:	22 e0       	ldi	r18, 0x02	; 2
 13c:	ae e1       	ldi	r26, 0x1E	; 30
 13e:	b2 e0       	ldi	r27, 0x02	; 2
 140:	01 c0       	rjmp	.+2      	; 0x144 <.do_clear_bss_start>

00000142 <.do_clear_bss_loop>:
 142:	1d 92       	st	X+, r1

00000144 <.do_clear_bss_start>:
 144:	a9 34       	cpi	r26, 0x49	; 73
 146:	b2 07       	cpc	r27, r18
 148:	e1 f7       	brne	.-8      	; 0x142 <.do_clear_bss_loop>
 14a:	a5 d2       	rcall	.+1354   	; 0x696 <main>
 14c:	b2 c5       	rjmp	.+2916   	; 0xcb2 <_exit>

0000014e <__bad_interrupt>:
 14e:	58 cf       	rjmp	.-336    	; 0x0 <__vectors>

00000150 <calculo_impulso>:
	sprintf(instrucao, "Posicao_fase: %i |  Angulo: %i |  Implusos: %i |  Implusos Guardados: %i \r\n", posicao_fase, angulo_atual, impulsos, impulsos_bk);
	send(instrucao);
}

void calculo_impulso(int angulo_set){
	if(angulo_set > 0){
 150:	18 16       	cp	r1, r24
 152:	19 06       	cpc	r1, r25
 154:	44 f4       	brge	.+16     	; 0x166 <calculo_impulso+0x16>
		
		impulsos_def = angulo_set/9;
 156:	69 e0       	ldi	r22, 0x09	; 9
 158:	70 e0       	ldi	r23, 0x00	; 0
 15a:	a0 d2       	rcall	.+1344   	; 0x69c <__divmodhi4>
 15c:	70 93 1f 02 	sts	0x021F, r23	; 0x80021f <__data_end+0x1>
 160:	60 93 1e 02 	sts	0x021E, r22	; 0x80021e <__data_end>
 164:	08 95       	ret
		
	} else if(angulo_set < 0){
 166:	99 23       	and	r25, r25
 168:	44 f4       	brge	.+16     	; 0x17a <calculo_impulso+0x2a>
		
		impulsos_def = angulo_set/9;
 16a:	69 e0       	ldi	r22, 0x09	; 9
 16c:	70 e0       	ldi	r23, 0x00	; 0
 16e:	96 d2       	rcall	.+1324   	; 0x69c <__divmodhi4>
 170:	70 93 1f 02 	sts	0x021F, r23	; 0x80021f <__data_end+0x1>
 174:	60 93 1e 02 	sts	0x021E, r22	; 0x80021e <__data_end>
 178:	08 95       	ret
		
	} else {
		
		impulsos_def = 0;
 17a:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <__data_end+0x1>
 17e:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <__data_end>
 182:	08 95       	ret

00000184 <send>:
	}
	rxusart.buffer_receiver = 0;
	buffer = 0;
}

void send(char *buffer){
 184:	ac 01       	movw	r20, r24
	unsigned char i = 0;
 186:	20 e0       	ldi	r18, 0x00	; 0
	while(buffer[i] != '\0'){
 188:	07 c0       	rjmp	.+14     	; 0x198 <send+0x14>
		while((UCSR1A & 1<<UDRE1) == 0);
 18a:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 18e:	95 ff       	sbrs	r25, 5
 190:	fc cf       	rjmp	.-8      	; 0x18a <send+0x6>
		UDR1 = buffer[i];
 192:	30 93 9c 00 	sts	0x009C, r19	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
		i++;
 196:	2f 5f       	subi	r18, 0xFF	; 255
	buffer = 0;
}

void send(char *buffer){
	unsigned char i = 0;
	while(buffer[i] != '\0'){
 198:	fa 01       	movw	r30, r20
 19a:	e2 0f       	add	r30, r18
 19c:	f1 1d       	adc	r31, r1
 19e:	30 81       	ld	r19, Z
 1a0:	31 11       	cpse	r19, r1
 1a2:	f3 cf       	rjmp	.-26     	; 0x18a <send+0x6>
		while((UCSR1A & 1<<UDRE1) == 0);
		UDR1 = buffer[i];
		i++;
	}
}
 1a4:	08 95       	ret

000001a6 <motor>:
		
	}
}

void motor(unsigned char sentido){
	if(sentido == 0){
 1a6:	81 11       	cpse	r24, r1
 1a8:	54 c0       	rjmp	.+168    	; 0x252 <motor+0xac>
		
		if(posicao_fase < 8 && impulsos < 20){
 1aa:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <posicao_fase>
 1ae:	88 30       	cpi	r24, 0x08	; 8
 1b0:	88 f4       	brcc	.+34     	; 0x1d4 <motor+0x2e>
 1b2:	20 91 22 02 	lds	r18, 0x0222	; 0x800222 <impulsos>
 1b6:	30 91 23 02 	lds	r19, 0x0223	; 0x800223 <impulsos+0x1>
 1ba:	24 31       	cpi	r18, 0x14	; 20
 1bc:	31 05       	cpc	r19, r1
 1be:	54 f4       	brge	.+20     	; 0x1d4 <motor+0x2e>
			posicao_fase++;
 1c0:	8f 5f       	subi	r24, 0xFF	; 255
 1c2:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <posicao_fase>
			impulsos++;
 1c6:	2f 5f       	subi	r18, 0xFF	; 255
 1c8:	3f 4f       	sbci	r19, 0xFF	; 255
 1ca:	30 93 23 02 	sts	0x0223, r19	; 0x800223 <impulsos+0x1>
 1ce:	20 93 22 02 	sts	0x0222, r18	; 0x800222 <impulsos>
 1d2:	11 c0       	rjmp	.+34     	; 0x1f6 <motor+0x50>
			} else if(posicao_fase >= 8 && impulsos < 20){
 1d4:	88 30       	cpi	r24, 0x08	; 8
 1d6:	78 f0       	brcs	.+30     	; 0x1f6 <motor+0x50>
 1d8:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <impulsos>
 1dc:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <impulsos+0x1>
 1e0:	84 31       	cpi	r24, 0x14	; 20
 1e2:	91 05       	cpc	r25, r1
 1e4:	44 f4       	brge	.+16     	; 0x1f6 <motor+0x50>
			posicao_fase = 1;
 1e6:	21 e0       	ldi	r18, 0x01	; 1
 1e8:	20 93 26 02 	sts	0x0226, r18	; 0x800226 <posicao_fase>
			impulsos++;
 1ec:	01 96       	adiw	r24, 0x01	; 1
 1ee:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <impulsos+0x1>
 1f2:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <impulsos>
		}
		
		if(impulsos > 20) impulsos = 20; 
 1f6:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <impulsos>
 1fa:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <impulsos+0x1>
 1fe:	45 97       	sbiw	r24, 0x15	; 21
 200:	34 f0       	brlt	.+12     	; 0x20e <motor+0x68>
 202:	84 e1       	ldi	r24, 0x14	; 20
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <impulsos+0x1>
 20a:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <impulsos>
		
		angulo_atual = 9*impulsos;
 20e:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <impulsos>
 212:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <impulsos+0x1>
 216:	9c 01       	movw	r18, r24
 218:	22 0f       	add	r18, r18
 21a:	33 1f       	adc	r19, r19
 21c:	22 0f       	add	r18, r18
 21e:	33 1f       	adc	r19, r19
 220:	22 0f       	add	r18, r18
 222:	33 1f       	adc	r19, r19
 224:	82 0f       	add	r24, r18
 226:	93 1f       	adc	r25, r19
 228:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <angulo_atual+0x1>
 22c:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <angulo_atual>
		PORTE = fase[posicao_fase];
 230:	e0 91 26 02 	lds	r30, 0x0226	; 0x800226 <posicao_fase>
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	e0 50       	subi	r30, 0x00	; 0
 238:	ff 4f       	sbci	r31, 0xFF	; 255
 23a:	80 81       	ld	r24, Z
 23c:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 23e:	2f e7       	ldi	r18, 0x7F	; 127
 240:	88 e3       	ldi	r24, 0x38	; 56
 242:	91 e0       	ldi	r25, 0x01	; 1
 244:	21 50       	subi	r18, 0x01	; 1
 246:	80 40       	sbci	r24, 0x00	; 0
 248:	90 40       	sbci	r25, 0x00	; 0
 24a:	e1 f7       	brne	.-8      	; 0x244 <motor+0x9e>
 24c:	00 c0       	rjmp	.+0      	; 0x24e <motor+0xa8>
 24e:	00 00       	nop
 250:	56 c0       	rjmp	.+172    	; 0x2fe <motor+0x158>
		_delay_ms(25);
		
	} else {
		
		if(posicao_fase > 1 && impulsos > -20){
 252:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <posicao_fase>
 256:	82 30       	cpi	r24, 0x02	; 2
 258:	90 f0       	brcs	.+36     	; 0x27e <motor+0xd8>
 25a:	20 91 22 02 	lds	r18, 0x0222	; 0x800222 <impulsos>
 25e:	30 91 23 02 	lds	r19, 0x0223	; 0x800223 <impulsos+0x1>
 262:	2d 3e       	cpi	r18, 0xED	; 237
 264:	9f ef       	ldi	r25, 0xFF	; 255
 266:	39 07       	cpc	r19, r25
 268:	54 f0       	brlt	.+20     	; 0x27e <motor+0xd8>
			posicao_fase--;
 26a:	81 50       	subi	r24, 0x01	; 1
 26c:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <posicao_fase>
			impulsos--;
 270:	21 50       	subi	r18, 0x01	; 1
 272:	31 09       	sbc	r19, r1
 274:	30 93 23 02 	sts	0x0223, r19	; 0x800223 <impulsos+0x1>
 278:	20 93 22 02 	sts	0x0222, r18	; 0x800222 <impulsos>
 27c:	12 c0       	rjmp	.+36     	; 0x2a2 <motor+0xfc>
			} else if(posicao_fase <= 1 && impulsos > -20){
 27e:	82 30       	cpi	r24, 0x02	; 2
 280:	80 f4       	brcc	.+32     	; 0x2a2 <motor+0xfc>
 282:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <impulsos>
 286:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <impulsos+0x1>
 28a:	8d 3e       	cpi	r24, 0xED	; 237
 28c:	2f ef       	ldi	r18, 0xFF	; 255
 28e:	92 07       	cpc	r25, r18
 290:	44 f0       	brlt	.+16     	; 0x2a2 <motor+0xfc>
			posicao_fase = 8;
 292:	28 e0       	ldi	r18, 0x08	; 8
 294:	20 93 26 02 	sts	0x0226, r18	; 0x800226 <posicao_fase>
			impulsos--;
 298:	01 97       	sbiw	r24, 0x01	; 1
 29a:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <impulsos+0x1>
 29e:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <impulsos>
		}
		
		if(impulsos < -20) impulsos = -20;
 2a2:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <impulsos>
 2a6:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <impulsos+0x1>
 2aa:	8c 3e       	cpi	r24, 0xEC	; 236
 2ac:	9f 4f       	sbci	r25, 0xFF	; 255
 2ae:	34 f4       	brge	.+12     	; 0x2bc <motor+0x116>
 2b0:	8c ee       	ldi	r24, 0xEC	; 236
 2b2:	9f ef       	ldi	r25, 0xFF	; 255
 2b4:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <impulsos+0x1>
 2b8:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <impulsos>
		
		angulo_atual = 9*impulsos;
 2bc:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <impulsos>
 2c0:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <impulsos+0x1>
 2c4:	9c 01       	movw	r18, r24
 2c6:	22 0f       	add	r18, r18
 2c8:	33 1f       	adc	r19, r19
 2ca:	22 0f       	add	r18, r18
 2cc:	33 1f       	adc	r19, r19
 2ce:	22 0f       	add	r18, r18
 2d0:	33 1f       	adc	r19, r19
 2d2:	82 0f       	add	r24, r18
 2d4:	93 1f       	adc	r25, r19
 2d6:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <angulo_atual+0x1>
 2da:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <angulo_atual>
		PORTE = fase[posicao_fase];
 2de:	e0 91 26 02 	lds	r30, 0x0226	; 0x800226 <posicao_fase>
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	e0 50       	subi	r30, 0x00	; 0
 2e6:	ff 4f       	sbci	r31, 0xFF	; 255
 2e8:	80 81       	ld	r24, Z
 2ea:	83 b9       	out	0x03, r24	; 3
 2ec:	8f e7       	ldi	r24, 0x7F	; 127
 2ee:	98 e3       	ldi	r25, 0x38	; 56
 2f0:	21 e0       	ldi	r18, 0x01	; 1
 2f2:	81 50       	subi	r24, 0x01	; 1
 2f4:	90 40       	sbci	r25, 0x00	; 0
 2f6:	20 40       	sbci	r18, 0x00	; 0
 2f8:	e1 f7       	brne	.-8      	; 0x2f2 <motor+0x14c>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <motor+0x156>
 2fc:	00 00       	nop
		_delay_ms(25);
		
	}
	sprintf(instrucao, "Posicao_fase: %i |  Angulo: %i |  Implusos: %i |  Implusos Guardados: %i \r\n", posicao_fase, angulo_atual, impulsos, impulsos_bk);
 2fe:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <impulsos_bk+0x1>
 302:	8f 93       	push	r24
 304:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <impulsos_bk>
 308:	8f 93       	push	r24
 30a:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <impulsos+0x1>
 30e:	8f 93       	push	r24
 310:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <impulsos>
 314:	8f 93       	push	r24
 316:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <angulo_atual+0x1>
 31a:	8f 93       	push	r24
 31c:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <angulo_atual>
 320:	8f 93       	push	r24
 322:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <posicao_fase>
 326:	1f 92       	push	r1
 328:	8f 93       	push	r24
 32a:	89 e0       	ldi	r24, 0x09	; 9
 32c:	91 e0       	ldi	r25, 0x01	; 1
 32e:	9f 93       	push	r25
 330:	8f 93       	push	r24
 332:	8b e2       	ldi	r24, 0x2B	; 43
 334:	92 e0       	ldi	r25, 0x02	; 2
 336:	9f 93       	push	r25
 338:	8f 93       	push	r24
 33a:	e0 d1       	rcall	.+960    	; 0x6fc <sprintf>
	send(instrucao);
 33c:	8b e2       	ldi	r24, 0x2B	; 43
 33e:	92 e0       	ldi	r25, 0x02	; 2
 340:	21 df       	rcall	.-446    	; 0x184 <send>
}
 342:	8d b7       	in	r24, 0x3d	; 61
 344:	9e b7       	in	r25, 0x3e	; 62
 346:	0c 96       	adiw	r24, 0x0c	; 12
 348:	0f b6       	in	r0, 0x3f	; 63
 34a:	f8 94       	cli
 34c:	9e bf       	out	0x3e, r25	; 62
 34e:	0f be       	out	0x3f, r0	; 63
 350:	8d bf       	out	0x3d, r24	; 61
 352:	08 95       	ret

00000354 <angulo>:

void angulo(int angulo_set){
	
	calculo_impulso(angulo_set);
 354:	fd de       	rcall	.-518    	; 0x150 <calculo_impulso>
	
	while(impulsos < impulsos_def){
 356:	02 c0       	rjmp	.+4      	; 0x35c <angulo+0x8>
		motor(0);
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	25 df       	rcall	.-438    	; 0x1a6 <motor>

void angulo(int angulo_set){
	
	calculo_impulso(angulo_set);
	
	while(impulsos < impulsos_def){
 35c:	20 91 22 02 	lds	r18, 0x0222	; 0x800222 <impulsos>
 360:	30 91 23 02 	lds	r19, 0x0223	; 0x800223 <impulsos+0x1>
 364:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <__data_end>
 368:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <__data_end+0x1>
 36c:	28 17       	cp	r18, r24
 36e:	39 07       	cpc	r19, r25
 370:	9c f3       	brlt	.-26     	; 0x358 <angulo+0x4>
		motor(0);
	}
	while(impulsos > impulsos_def){
		motor(1);
 372:	02 c0       	rjmp	.+4      	; 0x378 <angulo+0x24>
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	17 df       	rcall	.-466    	; 0x1a6 <motor>
	calculo_impulso(angulo_set);
	
	while(impulsos < impulsos_def){
		motor(0);
	}
	while(impulsos > impulsos_def){
 378:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <impulsos>
 37c:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <impulsos+0x1>
 380:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <__data_end>
 384:	30 91 1f 02 	lds	r19, 0x021F	; 0x80021f <__data_end+0x1>
 388:	28 17       	cp	r18, r24
 38a:	39 07       	cpc	r19, r25
 38c:	9c f3       	brlt	.-26     	; 0x374 <angulo+0x20>
		motor(1);
	}
	
	sprintf(instrucao, "Posicao_fase: %i |  Angulo: %i |  Implusos: %i |  Implusos Guardados: %i \r\n", posicao_fase, angulo_atual, impulsos, impulsos_bk);
 38e:	20 91 21 02 	lds	r18, 0x0221	; 0x800221 <impulsos_bk+0x1>
 392:	2f 93       	push	r18
 394:	20 91 20 02 	lds	r18, 0x0220	; 0x800220 <impulsos_bk>
 398:	2f 93       	push	r18
 39a:	9f 93       	push	r25
 39c:	8f 93       	push	r24
 39e:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <angulo_atual+0x1>
 3a2:	8f 93       	push	r24
 3a4:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <angulo_atual>
 3a8:	8f 93       	push	r24
 3aa:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <posicao_fase>
 3ae:	1f 92       	push	r1
 3b0:	8f 93       	push	r24
 3b2:	89 e0       	ldi	r24, 0x09	; 9
 3b4:	91 e0       	ldi	r25, 0x01	; 1
 3b6:	9f 93       	push	r25
 3b8:	8f 93       	push	r24
 3ba:	8b e2       	ldi	r24, 0x2B	; 43
 3bc:	92 e0       	ldi	r25, 0x02	; 2
 3be:	9f 93       	push	r25
 3c0:	8f 93       	push	r24
	send(instrucao);
 3c2:	9c d1       	rcall	.+824    	; 0x6fc <sprintf>
 3c4:	8b e2       	ldi	r24, 0x2B	; 43
 3c6:	92 e0       	ldi	r25, 0x02	; 2
 3c8:	dd de       	rcall	.-582    	; 0x184 <send>
}
 3ca:	8d b7       	in	r24, 0x3d	; 61
 3cc:	9e b7       	in	r25, 0x3e	; 62
 3ce:	0c 96       	adiw	r24, 0x0c	; 12
 3d0:	0f b6       	in	r0, 0x3f	; 63
 3d2:	f8 94       	cli
 3d4:	9e bf       	out	0x3e, r25	; 62
 3d6:	0f be       	out	0x3f, r0	; 63
 3d8:	8d bf       	out	0x3d, r24	; 61
 3da:	08 95       	ret

000003dc <angulo_invert>:

void angulo_invert(int angulo_set){
	
	calculo_impulso(-angulo_set);
 3dc:	91 95       	neg	r25
 3de:	81 95       	neg	r24
 3e0:	91 09       	sbc	r25, r1
 3e2:	b6 de       	rcall	.-660    	; 0x150 <calculo_impulso>
	
	while(impulsos < impulsos_def){
 3e4:	02 c0       	rjmp	.+4      	; 0x3ea <angulo_invert+0xe>
		motor(0);
 3e6:	80 e0       	ldi	r24, 0x00	; 0
 3e8:	de de       	rcall	.-580    	; 0x1a6 <motor>

void angulo_invert(int angulo_set){
	
	calculo_impulso(-angulo_set);
	
	while(impulsos < impulsos_def){
 3ea:	20 91 22 02 	lds	r18, 0x0222	; 0x800222 <impulsos>
 3ee:	30 91 23 02 	lds	r19, 0x0223	; 0x800223 <impulsos+0x1>
 3f2:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <__data_end>
 3f6:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <__data_end+0x1>
 3fa:	28 17       	cp	r18, r24
 3fc:	39 07       	cpc	r19, r25
 3fe:	9c f3       	brlt	.-26     	; 0x3e6 <angulo_invert+0xa>
 400:	09 c0       	rjmp	.+18     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
		motor(0);
	}
	while(impulsos > impulsos_def){
		if(posicao_fase == 0) posicao_fase = 8;
 402:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <posicao_fase>
 406:	81 11       	cpse	r24, r1
 408:	03 c0       	rjmp	.+6      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40a:	88 e0       	ldi	r24, 0x08	; 8
 40c:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <posicao_fase>
		motor(1);
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	c9 de       	rcall	.-622    	; 0x1a6 <motor>
	calculo_impulso(-angulo_set);
	
	while(impulsos < impulsos_def){
		motor(0);
	}
	while(impulsos > impulsos_def){
 414:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <impulsos>
 418:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <impulsos+0x1>
 41c:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <__data_end>
 420:	30 91 1f 02 	lds	r19, 0x021F	; 0x80021f <__data_end+0x1>
 424:	28 17       	cp	r18, r24
 426:	39 07       	cpc	r19, r25
 428:	64 f3       	brlt	.-40     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
		if(posicao_fase == 0) posicao_fase = 8;
		motor(1);
	}
	
	sprintf(instrucao, "Posicao_fase: %i |  Angulo: %i |  Implusos: %i |  Implusos Guardados: %i \r\n", posicao_fase, angulo_atual, impulsos, impulsos_bk);
 42a:	20 91 21 02 	lds	r18, 0x0221	; 0x800221 <impulsos_bk+0x1>
 42e:	2f 93       	push	r18
 430:	20 91 20 02 	lds	r18, 0x0220	; 0x800220 <impulsos_bk>
 434:	2f 93       	push	r18
 436:	9f 93       	push	r25
 438:	8f 93       	push	r24
 43a:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <angulo_atual+0x1>
 43e:	8f 93       	push	r24
 440:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <angulo_atual>
 444:	8f 93       	push	r24
 446:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <posicao_fase>
 44a:	1f 92       	push	r1
 44c:	8f 93       	push	r24
 44e:	89 e0       	ldi	r24, 0x09	; 9
 450:	91 e0       	ldi	r25, 0x01	; 1
 452:	9f 93       	push	r25
 454:	8f 93       	push	r24
 456:	8b e2       	ldi	r24, 0x2B	; 43
 458:	92 e0       	ldi	r25, 0x02	; 2
 45a:	9f 93       	push	r25
 45c:	8f 93       	push	r24
	send(instrucao);
 45e:	4e d1       	rcall	.+668    	; 0x6fc <sprintf>
 460:	8b e2       	ldi	r24, 0x2B	; 43
 462:	92 e0       	ldi	r25, 0x02	; 2
 464:	8f de       	rcall	.-738    	; 0x184 <send>
}
 466:	8d b7       	in	r24, 0x3d	; 61
 468:	9e b7       	in	r25, 0x3e	; 62
 46a:	0c 96       	adiw	r24, 0x0c	; 12
 46c:	0f b6       	in	r0, 0x3f	; 63
 46e:	f8 94       	cli
 470:	9e bf       	out	0x3e, r25	; 62
 472:	0f be       	out	0x3f, r0	; 63
 474:	8d bf       	out	0x3d, r24	; 61
 476:	08 95       	ret

00000478 <usart>:
		
	}
}

void usart(){
	if(rxusart.buffer_receiver == 1){
 478:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <rxusart+0x2>
 47c:	80 ff       	sbrs	r24, 0
 47e:	c6 c0       	rjmp	.+396    	; 0x60c <usart+0x194>
		if(rxusart.error == 1){
 480:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <rxusart+0x2>
 484:	81 ff       	sbrs	r24, 1
 486:	06 c0       	rjmp	.+12     	; 0x494 <usart+0x1c>
			rxusart.error = 0;
 488:	ea e2       	ldi	r30, 0x2A	; 42
 48a:	f2 e0       	ldi	r31, 0x02	; 2
 48c:	80 81       	ld	r24, Z
 48e:	8d 7f       	andi	r24, 0xFD	; 253
 490:	80 83       	st	Z, r24
 492:	bc c0       	rjmp	.+376    	; 0x60c <usart+0x194>
			} else {
			buffer = rxusart.rx_buffer;
 494:	e0 91 28 02 	lds	r30, 0x0228	; 0x800228 <rxusart>
 498:	e0 93 27 02 	sts	0x0227, r30	; 0x800227 <buffer>

			switch(buffer){
 49c:	8e 2f       	mov	r24, r30
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	fc 01       	movw	r30, r24
 4a2:	f0 97       	sbiw	r30, 0x30	; 48
 4a4:	e4 34       	cpi	r30, 0x44	; 68
 4a6:	f1 05       	cpc	r31, r1
 4a8:	08 f0       	brcs	.+2      	; 0x4ac <usart+0x34>
 4aa:	b0 c0       	rjmp	.+352    	; 0x60c <usart+0x194>
 4ac:	ea 5b       	subi	r30, 0xBA	; 186
 4ae:	ff 4f       	sbci	r31, 0xFF	; 255
 4b0:	08 c1       	rjmp	.+528    	; 0x6c2 <__tablejump2__>
				
				case 'S':
				case 's':
					impulsos_bk = impulsos;
 4b2:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <impulsos>
 4b6:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <impulsos+0x1>
 4ba:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <impulsos_bk>
 4be:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <impulsos_bk+0x1>
					sprintf(instrucao, "(Define Referencia) Impulso Saved: %i \r\n", impulsos_bk);
 4c2:	9f 93       	push	r25
 4c4:	8f 93       	push	r24
 4c6:	85 e5       	ldi	r24, 0x55	; 85
 4c8:	91 e0       	ldi	r25, 0x01	; 1
 4ca:	9f 93       	push	r25
 4cc:	8f 93       	push	r24
 4ce:	8b e2       	ldi	r24, 0x2B	; 43
 4d0:	92 e0       	ldi	r25, 0x02	; 2
 4d2:	9f 93       	push	r25
 4d4:	8f 93       	push	r24
 4d6:	12 d1       	rcall	.+548    	; 0x6fc <sprintf>
					send(instrucao);
 4d8:	8b e2       	ldi	r24, 0x2B	; 43
 4da:	92 e0       	ldi	r25, 0x02	; 2
 4dc:	53 de       	rcall	.-858    	; 0x184 <send>
					break;
 4de:	0f 90       	pop	r0
 4e0:	0f 90       	pop	r0
 4e2:	0f 90       	pop	r0
 4e4:	0f 90       	pop	r0
 4e6:	0f 90       	pop	r0
 4e8:	0f 90       	pop	r0
				
				case 'D':
				case 'd':
					angulo(0);
 4ea:	90 c0       	rjmp	.+288    	; 0x60c <usart+0x194>
 4ec:	80 e0       	ldi	r24, 0x00	; 0
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	31 df       	rcall	.-414    	; 0x354 <angulo>
					impulsos_bk = impulsos;
 4f2:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <impulsos>
 4f6:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <impulsos+0x1>
 4fa:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <impulsos_bk>
 4fe:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <impulsos_bk+0x1>
					sprintf(instrucao, "(Default Angulo 0) Impulso Saved:: %i | Impulso Definido: %i \r\n", impulsos_bk, impulsos_def);
 502:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <__data_end+0x1>
 506:	2f 93       	push	r18
 508:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <__data_end>
 50c:	2f 93       	push	r18
 50e:	9f 93       	push	r25
 510:	8f 93       	push	r24
 512:	8e e7       	ldi	r24, 0x7E	; 126
 514:	91 e0       	ldi	r25, 0x01	; 1
 516:	9f 93       	push	r25
 518:	8f 93       	push	r24
 51a:	8b e2       	ldi	r24, 0x2B	; 43
 51c:	92 e0       	ldi	r25, 0x02	; 2
 51e:	9f 93       	push	r25
 520:	8f 93       	push	r24
					send(instrucao);
 522:	ec d0       	rcall	.+472    	; 0x6fc <sprintf>
 524:	8b e2       	ldi	r24, 0x2B	; 43
 526:	92 e0       	ldi	r25, 0x02	; 2
 528:	2d de       	rcall	.-934    	; 0x184 <send>
					break;
 52a:	8d b7       	in	r24, 0x3d	; 61
 52c:	9e b7       	in	r25, 0x3e	; 62
 52e:	08 96       	adiw	r24, 0x08	; 8
 530:	0f b6       	in	r0, 0x3f	; 63
 532:	f8 94       	cli
 534:	9e bf       	out	0x3e, r25	; 62
 536:	0f be       	out	0x3f, r0	; 63
 538:	8d bf       	out	0x3d, r24	; 61
 53a:	68 c0       	rjmp	.+208    	; 0x60c <usart+0x194>
				
				case 'R':
				case 'r':
				sprintf(instrucao, "(Angulo++)\r\n");
 53c:	8d e0       	ldi	r24, 0x0D	; 13
 53e:	ee eb       	ldi	r30, 0xBE	; 190
 540:	f1 e0       	ldi	r31, 0x01	; 1
 542:	ab e2       	ldi	r26, 0x2B	; 43
 544:	b2 e0       	ldi	r27, 0x02	; 2
 546:	01 90       	ld	r0, Z+
 548:	0d 92       	st	X+, r0
				send(instrucao);
 54a:	8a 95       	dec	r24
 54c:	e1 f7       	brne	.-8      	; 0x546 <usart+0xce>
 54e:	8b e2       	ldi	r24, 0x2B	; 43
 550:	92 e0       	ldi	r25, 0x02	; 2
				motor(0);
 552:	18 de       	rcall	.-976    	; 0x184 <send>
 554:	80 e0       	ldi	r24, 0x00	; 0
 556:	27 de       	rcall	.-946    	; 0x1a6 <motor>
				break;
 558:	59 c0       	rjmp	.+178    	; 0x60c <usart+0x194>

				case 'L':
				case 'l':
				sprintf(instrucao, "(Angulo--)\r\n");
 55a:	8d e0       	ldi	r24, 0x0D	; 13
 55c:	eb ec       	ldi	r30, 0xCB	; 203
 55e:	f1 e0       	ldi	r31, 0x01	; 1
 560:	ab e2       	ldi	r26, 0x2B	; 43
 562:	b2 e0       	ldi	r27, 0x02	; 2
 564:	01 90       	ld	r0, Z+
 566:	0d 92       	st	X+, r0
				send(instrucao);
 568:	8a 95       	dec	r24
 56a:	e1 f7       	brne	.-8      	; 0x564 <usart+0xec>
 56c:	8b e2       	ldi	r24, 0x2B	; 43
 56e:	92 e0       	ldi	r25, 0x02	; 2
				motor(1);
 570:	09 de       	rcall	.-1006   	; 0x184 <send>
 572:	81 e0       	ldi	r24, 0x01	; 1
 574:	18 de       	rcall	.-976    	; 0x1a6 <motor>
				break;
 576:	4a c0       	rjmp	.+148    	; 0x60c <usart+0x194>
				
				case '1':
				sprintf(instrucao, "(Angulo 180)\r\n");
 578:	8f e0       	ldi	r24, 0x0F	; 15
 57a:	e8 ed       	ldi	r30, 0xD8	; 216
 57c:	f1 e0       	ldi	r31, 0x01	; 1
 57e:	ab e2       	ldi	r26, 0x2B	; 43
 580:	b2 e0       	ldi	r27, 0x02	; 2
 582:	01 90       	ld	r0, Z+
 584:	0d 92       	st	X+, r0
				send(instrucao);
 586:	8a 95       	dec	r24
 588:	e1 f7       	brne	.-8      	; 0x582 <usart+0x10a>
 58a:	8b e2       	ldi	r24, 0x2B	; 43
 58c:	92 e0       	ldi	r25, 0x02	; 2
				angulo(180);
 58e:	fa dd       	rcall	.-1036   	; 0x184 <send>
 590:	84 eb       	ldi	r24, 0xB4	; 180
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	df de       	rcall	.-578    	; 0x354 <angulo>
				break;
				
				case '2':
				sprintf(instrucao, "(Angulo -180)\r\n");
 596:	3a c0       	rjmp	.+116    	; 0x60c <usart+0x194>
 598:	80 e1       	ldi	r24, 0x10	; 16
 59a:	e7 ee       	ldi	r30, 0xE7	; 231
 59c:	f1 e0       	ldi	r31, 0x01	; 1
 59e:	ab e2       	ldi	r26, 0x2B	; 43
 5a0:	b2 e0       	ldi	r27, 0x02	; 2
 5a2:	01 90       	ld	r0, Z+
 5a4:	0d 92       	st	X+, r0
				send(instrucao);
 5a6:	8a 95       	dec	r24
 5a8:	e1 f7       	brne	.-8      	; 0x5a2 <usart+0x12a>
 5aa:	8b e2       	ldi	r24, 0x2B	; 43
 5ac:	92 e0       	ldi	r25, 0x02	; 2
				angulo_invert(180);
 5ae:	ea dd       	rcall	.-1068   	; 0x184 <send>
 5b0:	84 eb       	ldi	r24, 0xB4	; 180
 5b2:	90 e0       	ldi	r25, 0x00	; 0
				break;
 5b4:	13 df       	rcall	.-474    	; 0x3dc <angulo_invert>
				
				case '9':
				sprintf(instrucao, "(Angulo 90)\r\n");
 5b6:	2a c0       	rjmp	.+84     	; 0x60c <usart+0x194>
 5b8:	8e e0       	ldi	r24, 0x0E	; 14
 5ba:	e7 ef       	ldi	r30, 0xF7	; 247
 5bc:	f1 e0       	ldi	r31, 0x01	; 1
 5be:	ab e2       	ldi	r26, 0x2B	; 43
 5c0:	b2 e0       	ldi	r27, 0x02	; 2
 5c2:	01 90       	ld	r0, Z+
 5c4:	0d 92       	st	X+, r0
				send(instrucao);
 5c6:	8a 95       	dec	r24
 5c8:	e1 f7       	brne	.-8      	; 0x5c2 <usart+0x14a>
 5ca:	8b e2       	ldi	r24, 0x2B	; 43
 5cc:	92 e0       	ldi	r25, 0x02	; 2
				angulo(90);
 5ce:	da dd       	rcall	.-1100   	; 0x184 <send>
 5d0:	8a e5       	ldi	r24, 0x5A	; 90
 5d2:	90 e0       	ldi	r25, 0x00	; 0
				break;
 5d4:	bf de       	rcall	.-642    	; 0x354 <angulo>
				
				case '0':
				sprintf(instrucao, "(Angulo 0 referencia)\r\n");
 5d6:	1a c0       	rjmp	.+52     	; 0x60c <usart+0x194>
 5d8:	88 e1       	ldi	r24, 0x18	; 24
 5da:	e5 e0       	ldi	r30, 0x05	; 5
 5dc:	f2 e0       	ldi	r31, 0x02	; 2
 5de:	ab e2       	ldi	r26, 0x2B	; 43
 5e0:	b2 e0       	ldi	r27, 0x02	; 2
 5e2:	01 90       	ld	r0, Z+
 5e4:	0d 92       	st	X+, r0
 5e6:	8a 95       	dec	r24
				send(instrucao);
 5e8:	e1 f7       	brne	.-8      	; 0x5e2 <usart+0x16a>
 5ea:	8b e2       	ldi	r24, 0x2B	; 43
 5ec:	92 e0       	ldi	r25, 0x02	; 2
				angulo(9*impulsos_bk);
 5ee:	ca dd       	rcall	.-1132   	; 0x184 <send>
 5f0:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <impulsos_bk>
 5f4:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <impulsos_bk+0x1>
 5f8:	9c 01       	movw	r18, r24
 5fa:	22 0f       	add	r18, r18
 5fc:	33 1f       	adc	r19, r19
 5fe:	22 0f       	add	r18, r18
 600:	33 1f       	adc	r19, r19
 602:	22 0f       	add	r18, r18
 604:	33 1f       	adc	r19, r19
 606:	82 0f       	add	r24, r18
 608:	93 1f       	adc	r25, r19
 60a:	a4 de       	rcall	.-696    	; 0x354 <angulo>
				default:
				break;
			}
		}
	}
	rxusart.buffer_receiver = 0;
 60c:	ea e2       	ldi	r30, 0x2A	; 42
 60e:	f2 e0       	ldi	r31, 0x02	; 2
 610:	80 81       	ld	r24, Z
 612:	8e 7f       	andi	r24, 0xFE	; 254
 614:	80 83       	st	Z, r24
	buffer = 0;
 616:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <buffer>
 61a:	08 95       	ret

0000061c <__vector_30>:
		UDR1 = buffer[i];
		i++;
	}
}

ISR(USART1_RX_vect){
 61c:	1f 92       	push	r1
 61e:	0f 92       	push	r0
 620:	0f b6       	in	r0, 0x3f	; 63
 622:	0f 92       	push	r0
 624:	11 24       	eor	r1, r1
 626:	0b b6       	in	r0, 0x3b	; 59
 628:	0f 92       	push	r0
 62a:	8f 93       	push	r24
 62c:	ef 93       	push	r30
 62e:	ff 93       	push	r31
	rxusart.rx_status = UCSR1A;
 630:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 634:	e8 e2       	ldi	r30, 0x28	; 40
 636:	f2 e0       	ldi	r31, 0x02	; 2
 638:	81 83       	std	Z+1, r24	; 0x01

	if( rxusart.rx_status & ((1<<FE1)|(1<<DOR1)|(1>>UPE1))){
 63a:	81 81       	ldd	r24, Z+1	; 0x01
 63c:	88 71       	andi	r24, 0x18	; 24
 63e:	29 f0       	breq	.+10     	; 0x64a <__vector_30+0x2e>
		rxusart.error = 1;
 640:	ea e2       	ldi	r30, 0x2A	; 42
 642:	f2 e0       	ldi	r31, 0x02	; 2
 644:	80 81       	ld	r24, Z
 646:	82 60       	ori	r24, 0x02	; 2
 648:	80 83       	st	Z, r24
	}
	
	rxusart.rx_buffer = UDR1;
 64a:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 64e:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <rxusart>
	rxusart.buffer_receiver = 1;
 652:	ea e2       	ldi	r30, 0x2A	; 42
 654:	f2 e0       	ldi	r31, 0x02	; 2
 656:	80 81       	ld	r24, Z
 658:	81 60       	ori	r24, 0x01	; 1
 65a:	80 83       	st	Z, r24
}
 65c:	ff 91       	pop	r31
 65e:	ef 91       	pop	r30
 660:	8f 91       	pop	r24
 662:	0f 90       	pop	r0
 664:	0b be       	out	0x3b, r0	; 59
 666:	0f 90       	pop	r0
 668:	0f be       	out	0x3f, r0	; 63
 66a:	0f 90       	pop	r0
 66c:	1f 90       	pop	r1
 66e:	18 95       	reti

00000670 <inic>:

void inic(){
	
	DDRE = 0b00001111;
 670:	8f e0       	ldi	r24, 0x0F	; 15
 672:	82 b9       	out	0x02, r24	; 2
	PORTE = 0b00001111;
 674:	83 b9       	out	0x03, r24	; 3
	
	UBRR1H = 0;
 676:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = 103;
 67a:	87 e6       	ldi	r24, 0x67	; 103
 67c:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	UCSR1A = (1<<U2X1);
 680:	82 e0       	ldi	r24, 0x02	; 2
 682:	80 93 9b 00 	sts	0x009B, r24	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
	UCSR1B = (1<<RXCIE1)|(1<<RXEN1)|(1<<TXEN1);
 686:	88 e9       	ldi	r24, 0x98	; 152
 688:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
	UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
 68c:	86 e0       	ldi	r24, 0x06	; 6
 68e:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
	
	sei();
 692:	78 94       	sei
 694:	08 95       	ret

00000696 <main>:
int16_t angulo_atual = 0, impulsos = 0, impulsos_bk = 0, impulsos_def = 0;


int main(void){

	inic();
 696:	ec df       	rcall	.-40     	; 0x670 <inic>
	
	while(1){

		usart();
 698:	ef de       	rcall	.-546    	; 0x478 <usart>
 69a:	fe cf       	rjmp	.-4      	; 0x698 <main+0x2>

0000069c <__divmodhi4>:
 69c:	97 fb       	bst	r25, 7
 69e:	07 2e       	mov	r0, r23
 6a0:	16 f4       	brtc	.+4      	; 0x6a6 <__divmodhi4+0xa>
 6a2:	00 94       	com	r0
 6a4:	06 d0       	rcall	.+12     	; 0x6b2 <__divmodhi4_neg1>
 6a6:	77 fd       	sbrc	r23, 7
 6a8:	08 d0       	rcall	.+16     	; 0x6ba <__divmodhi4_neg2>
 6aa:	14 d0       	rcall	.+40     	; 0x6d4 <__udivmodhi4>
 6ac:	07 fc       	sbrc	r0, 7
 6ae:	05 d0       	rcall	.+10     	; 0x6ba <__divmodhi4_neg2>
 6b0:	3e f4       	brtc	.+14     	; 0x6c0 <__divmodhi4_exit>

000006b2 <__divmodhi4_neg1>:
 6b2:	90 95       	com	r25
 6b4:	81 95       	neg	r24
 6b6:	9f 4f       	sbci	r25, 0xFF	; 255
 6b8:	08 95       	ret

000006ba <__divmodhi4_neg2>:
 6ba:	70 95       	com	r23
 6bc:	61 95       	neg	r22
 6be:	7f 4f       	sbci	r23, 0xFF	; 255

000006c0 <__divmodhi4_exit>:
 6c0:	08 95       	ret

000006c2 <__tablejump2__>:
 6c2:	ee 0f       	add	r30, r30
 6c4:	ff 1f       	adc	r31, r31
 6c6:	00 24       	eor	r0, r0
 6c8:	00 1c       	adc	r0, r0
 6ca:	0b be       	out	0x3b, r0	; 59
 6cc:	07 90       	elpm	r0, Z+
 6ce:	f6 91       	elpm	r31, Z
 6d0:	e0 2d       	mov	r30, r0
 6d2:	09 94       	ijmp

000006d4 <__udivmodhi4>:
 6d4:	aa 1b       	sub	r26, r26
 6d6:	bb 1b       	sub	r27, r27
 6d8:	51 e1       	ldi	r21, 0x11	; 17
 6da:	07 c0       	rjmp	.+14     	; 0x6ea <__udivmodhi4_ep>

000006dc <__udivmodhi4_loop>:
 6dc:	aa 1f       	adc	r26, r26
 6de:	bb 1f       	adc	r27, r27
 6e0:	a6 17       	cp	r26, r22
 6e2:	b7 07       	cpc	r27, r23
 6e4:	10 f0       	brcs	.+4      	; 0x6ea <__udivmodhi4_ep>
 6e6:	a6 1b       	sub	r26, r22
 6e8:	b7 0b       	sbc	r27, r23

000006ea <__udivmodhi4_ep>:
 6ea:	88 1f       	adc	r24, r24
 6ec:	99 1f       	adc	r25, r25
 6ee:	5a 95       	dec	r21
 6f0:	a9 f7       	brne	.-22     	; 0x6dc <__udivmodhi4_loop>
 6f2:	80 95       	com	r24
 6f4:	90 95       	com	r25
 6f6:	bc 01       	movw	r22, r24
 6f8:	cd 01       	movw	r24, r26
 6fa:	08 95       	ret

000006fc <sprintf>:
 6fc:	0f 93       	push	r16
 6fe:	1f 93       	push	r17
 700:	cf 93       	push	r28
 702:	df 93       	push	r29
 704:	cd b7       	in	r28, 0x3d	; 61
 706:	de b7       	in	r29, 0x3e	; 62
 708:	2e 97       	sbiw	r28, 0x0e	; 14
 70a:	0f b6       	in	r0, 0x3f	; 63
 70c:	f8 94       	cli
 70e:	de bf       	out	0x3e, r29	; 62
 710:	0f be       	out	0x3f, r0	; 63
 712:	cd bf       	out	0x3d, r28	; 61
 714:	0d 89       	ldd	r16, Y+21	; 0x15
 716:	1e 89       	ldd	r17, Y+22	; 0x16
 718:	86 e0       	ldi	r24, 0x06	; 6
 71a:	8c 83       	std	Y+4, r24	; 0x04
 71c:	1a 83       	std	Y+2, r17	; 0x02
 71e:	09 83       	std	Y+1, r16	; 0x01
 720:	8f ef       	ldi	r24, 0xFF	; 255
 722:	9f e7       	ldi	r25, 0x7F	; 127
 724:	9e 83       	std	Y+6, r25	; 0x06
 726:	8d 83       	std	Y+5, r24	; 0x05
 728:	ae 01       	movw	r20, r28
 72a:	47 5e       	subi	r20, 0xE7	; 231
 72c:	5f 4f       	sbci	r21, 0xFF	; 255
 72e:	6f 89       	ldd	r22, Y+23	; 0x17
 730:	78 8d       	ldd	r23, Y+24	; 0x18
 732:	ce 01       	movw	r24, r28
 734:	01 96       	adiw	r24, 0x01	; 1
 736:	10 d0       	rcall	.+32     	; 0x758 <vfprintf>
 738:	ef 81       	ldd	r30, Y+7	; 0x07
 73a:	f8 85       	ldd	r31, Y+8	; 0x08
 73c:	e0 0f       	add	r30, r16
 73e:	f1 1f       	adc	r31, r17
 740:	10 82       	st	Z, r1
 742:	2e 96       	adiw	r28, 0x0e	; 14
 744:	0f b6       	in	r0, 0x3f	; 63
 746:	f8 94       	cli
 748:	de bf       	out	0x3e, r29	; 62
 74a:	0f be       	out	0x3f, r0	; 63
 74c:	cd bf       	out	0x3d, r28	; 61
 74e:	df 91       	pop	r29
 750:	cf 91       	pop	r28
 752:	1f 91       	pop	r17
 754:	0f 91       	pop	r16
 756:	08 95       	ret

00000758 <vfprintf>:
 758:	2f 92       	push	r2
 75a:	3f 92       	push	r3
 75c:	4f 92       	push	r4
 75e:	5f 92       	push	r5
 760:	6f 92       	push	r6
 762:	7f 92       	push	r7
 764:	8f 92       	push	r8
 766:	9f 92       	push	r9
 768:	af 92       	push	r10
 76a:	bf 92       	push	r11
 76c:	cf 92       	push	r12
 76e:	df 92       	push	r13
 770:	ef 92       	push	r14
 772:	ff 92       	push	r15
 774:	0f 93       	push	r16
 776:	1f 93       	push	r17
 778:	cf 93       	push	r28
 77a:	df 93       	push	r29
 77c:	cd b7       	in	r28, 0x3d	; 61
 77e:	de b7       	in	r29, 0x3e	; 62
 780:	2b 97       	sbiw	r28, 0x0b	; 11
 782:	0f b6       	in	r0, 0x3f	; 63
 784:	f8 94       	cli
 786:	de bf       	out	0x3e, r29	; 62
 788:	0f be       	out	0x3f, r0	; 63
 78a:	cd bf       	out	0x3d, r28	; 61
 78c:	6c 01       	movw	r12, r24
 78e:	7b 01       	movw	r14, r22
 790:	8a 01       	movw	r16, r20
 792:	fc 01       	movw	r30, r24
 794:	17 82       	std	Z+7, r1	; 0x07
 796:	16 82       	std	Z+6, r1	; 0x06
 798:	83 81       	ldd	r24, Z+3	; 0x03
 79a:	81 ff       	sbrs	r24, 1
 79c:	bf c1       	rjmp	.+894    	; 0xb1c <vfprintf+0x3c4>
 79e:	ce 01       	movw	r24, r28
 7a0:	01 96       	adiw	r24, 0x01	; 1
 7a2:	3c 01       	movw	r6, r24
 7a4:	f6 01       	movw	r30, r12
 7a6:	93 81       	ldd	r25, Z+3	; 0x03
 7a8:	f7 01       	movw	r30, r14
 7aa:	93 fd       	sbrc	r25, 3
 7ac:	85 91       	lpm	r24, Z+
 7ae:	93 ff       	sbrs	r25, 3
 7b0:	81 91       	ld	r24, Z+
 7b2:	7f 01       	movw	r14, r30
 7b4:	88 23       	and	r24, r24
 7b6:	09 f4       	brne	.+2      	; 0x7ba <vfprintf+0x62>
 7b8:	ad c1       	rjmp	.+858    	; 0xb14 <vfprintf+0x3bc>
 7ba:	85 32       	cpi	r24, 0x25	; 37
 7bc:	39 f4       	brne	.+14     	; 0x7cc <vfprintf+0x74>
 7be:	93 fd       	sbrc	r25, 3
 7c0:	85 91       	lpm	r24, Z+
 7c2:	93 ff       	sbrs	r25, 3
 7c4:	81 91       	ld	r24, Z+
 7c6:	7f 01       	movw	r14, r30
 7c8:	85 32       	cpi	r24, 0x25	; 37
 7ca:	21 f4       	brne	.+8      	; 0x7d4 <vfprintf+0x7c>
 7cc:	b6 01       	movw	r22, r12
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	d6 d1       	rcall	.+940    	; 0xb7e <fputc>
 7d2:	e8 cf       	rjmp	.-48     	; 0x7a4 <vfprintf+0x4c>
 7d4:	91 2c       	mov	r9, r1
 7d6:	21 2c       	mov	r2, r1
 7d8:	31 2c       	mov	r3, r1
 7da:	ff e1       	ldi	r31, 0x1F	; 31
 7dc:	f3 15       	cp	r31, r3
 7de:	d8 f0       	brcs	.+54     	; 0x816 <vfprintf+0xbe>
 7e0:	8b 32       	cpi	r24, 0x2B	; 43
 7e2:	79 f0       	breq	.+30     	; 0x802 <vfprintf+0xaa>
 7e4:	38 f4       	brcc	.+14     	; 0x7f4 <vfprintf+0x9c>
 7e6:	80 32       	cpi	r24, 0x20	; 32
 7e8:	79 f0       	breq	.+30     	; 0x808 <vfprintf+0xb0>
 7ea:	83 32       	cpi	r24, 0x23	; 35
 7ec:	a1 f4       	brne	.+40     	; 0x816 <vfprintf+0xbe>
 7ee:	23 2d       	mov	r18, r3
 7f0:	20 61       	ori	r18, 0x10	; 16
 7f2:	1d c0       	rjmp	.+58     	; 0x82e <vfprintf+0xd6>
 7f4:	8d 32       	cpi	r24, 0x2D	; 45
 7f6:	61 f0       	breq	.+24     	; 0x810 <vfprintf+0xb8>
 7f8:	80 33       	cpi	r24, 0x30	; 48
 7fa:	69 f4       	brne	.+26     	; 0x816 <vfprintf+0xbe>
 7fc:	23 2d       	mov	r18, r3
 7fe:	21 60       	ori	r18, 0x01	; 1
 800:	16 c0       	rjmp	.+44     	; 0x82e <vfprintf+0xd6>
 802:	83 2d       	mov	r24, r3
 804:	82 60       	ori	r24, 0x02	; 2
 806:	38 2e       	mov	r3, r24
 808:	e3 2d       	mov	r30, r3
 80a:	e4 60       	ori	r30, 0x04	; 4
 80c:	3e 2e       	mov	r3, r30
 80e:	2a c0       	rjmp	.+84     	; 0x864 <vfprintf+0x10c>
 810:	f3 2d       	mov	r31, r3
 812:	f8 60       	ori	r31, 0x08	; 8
 814:	1d c0       	rjmp	.+58     	; 0x850 <vfprintf+0xf8>
 816:	37 fc       	sbrc	r3, 7
 818:	2d c0       	rjmp	.+90     	; 0x874 <vfprintf+0x11c>
 81a:	20 ed       	ldi	r18, 0xD0	; 208
 81c:	28 0f       	add	r18, r24
 81e:	2a 30       	cpi	r18, 0x0A	; 10
 820:	40 f0       	brcs	.+16     	; 0x832 <vfprintf+0xda>
 822:	8e 32       	cpi	r24, 0x2E	; 46
 824:	b9 f4       	brne	.+46     	; 0x854 <vfprintf+0xfc>
 826:	36 fc       	sbrc	r3, 6
 828:	75 c1       	rjmp	.+746    	; 0xb14 <vfprintf+0x3bc>
 82a:	23 2d       	mov	r18, r3
 82c:	20 64       	ori	r18, 0x40	; 64
 82e:	32 2e       	mov	r3, r18
 830:	19 c0       	rjmp	.+50     	; 0x864 <vfprintf+0x10c>
 832:	36 fe       	sbrs	r3, 6
 834:	06 c0       	rjmp	.+12     	; 0x842 <vfprintf+0xea>
 836:	8a e0       	ldi	r24, 0x0A	; 10
 838:	98 9e       	mul	r9, r24
 83a:	20 0d       	add	r18, r0
 83c:	11 24       	eor	r1, r1
 83e:	92 2e       	mov	r9, r18
 840:	11 c0       	rjmp	.+34     	; 0x864 <vfprintf+0x10c>
 842:	ea e0       	ldi	r30, 0x0A	; 10
 844:	2e 9e       	mul	r2, r30
 846:	20 0d       	add	r18, r0
 848:	11 24       	eor	r1, r1
 84a:	22 2e       	mov	r2, r18
 84c:	f3 2d       	mov	r31, r3
 84e:	f0 62       	ori	r31, 0x20	; 32
 850:	3f 2e       	mov	r3, r31
 852:	08 c0       	rjmp	.+16     	; 0x864 <vfprintf+0x10c>
 854:	8c 36       	cpi	r24, 0x6C	; 108
 856:	21 f4       	brne	.+8      	; 0x860 <vfprintf+0x108>
 858:	83 2d       	mov	r24, r3
 85a:	80 68       	ori	r24, 0x80	; 128
 85c:	38 2e       	mov	r3, r24
 85e:	02 c0       	rjmp	.+4      	; 0x864 <vfprintf+0x10c>
 860:	88 36       	cpi	r24, 0x68	; 104
 862:	41 f4       	brne	.+16     	; 0x874 <vfprintf+0x11c>
 864:	f7 01       	movw	r30, r14
 866:	93 fd       	sbrc	r25, 3
 868:	85 91       	lpm	r24, Z+
 86a:	93 ff       	sbrs	r25, 3
 86c:	81 91       	ld	r24, Z+
 86e:	7f 01       	movw	r14, r30
 870:	81 11       	cpse	r24, r1
 872:	b3 cf       	rjmp	.-154    	; 0x7da <vfprintf+0x82>
 874:	98 2f       	mov	r25, r24
 876:	9f 7d       	andi	r25, 0xDF	; 223
 878:	95 54       	subi	r25, 0x45	; 69
 87a:	93 30       	cpi	r25, 0x03	; 3
 87c:	28 f4       	brcc	.+10     	; 0x888 <vfprintf+0x130>
 87e:	0c 5f       	subi	r16, 0xFC	; 252
 880:	1f 4f       	sbci	r17, 0xFF	; 255
 882:	9f e3       	ldi	r25, 0x3F	; 63
 884:	99 83       	std	Y+1, r25	; 0x01
 886:	0d c0       	rjmp	.+26     	; 0x8a2 <vfprintf+0x14a>
 888:	83 36       	cpi	r24, 0x63	; 99
 88a:	31 f0       	breq	.+12     	; 0x898 <vfprintf+0x140>
 88c:	83 37       	cpi	r24, 0x73	; 115
 88e:	71 f0       	breq	.+28     	; 0x8ac <vfprintf+0x154>
 890:	83 35       	cpi	r24, 0x53	; 83
 892:	09 f0       	breq	.+2      	; 0x896 <vfprintf+0x13e>
 894:	55 c0       	rjmp	.+170    	; 0x940 <vfprintf+0x1e8>
 896:	20 c0       	rjmp	.+64     	; 0x8d8 <vfprintf+0x180>
 898:	f8 01       	movw	r30, r16
 89a:	80 81       	ld	r24, Z
 89c:	89 83       	std	Y+1, r24	; 0x01
 89e:	0e 5f       	subi	r16, 0xFE	; 254
 8a0:	1f 4f       	sbci	r17, 0xFF	; 255
 8a2:	88 24       	eor	r8, r8
 8a4:	83 94       	inc	r8
 8a6:	91 2c       	mov	r9, r1
 8a8:	53 01       	movw	r10, r6
 8aa:	12 c0       	rjmp	.+36     	; 0x8d0 <vfprintf+0x178>
 8ac:	28 01       	movw	r4, r16
 8ae:	f2 e0       	ldi	r31, 0x02	; 2
 8b0:	4f 0e       	add	r4, r31
 8b2:	51 1c       	adc	r5, r1
 8b4:	f8 01       	movw	r30, r16
 8b6:	a0 80       	ld	r10, Z
 8b8:	b1 80       	ldd	r11, Z+1	; 0x01
 8ba:	36 fe       	sbrs	r3, 6
 8bc:	03 c0       	rjmp	.+6      	; 0x8c4 <vfprintf+0x16c>
 8be:	69 2d       	mov	r22, r9
 8c0:	70 e0       	ldi	r23, 0x00	; 0
 8c2:	02 c0       	rjmp	.+4      	; 0x8c8 <vfprintf+0x170>
 8c4:	6f ef       	ldi	r22, 0xFF	; 255
 8c6:	7f ef       	ldi	r23, 0xFF	; 255
 8c8:	c5 01       	movw	r24, r10
 8ca:	4e d1       	rcall	.+668    	; 0xb68 <strnlen>
 8cc:	4c 01       	movw	r8, r24
 8ce:	82 01       	movw	r16, r4
 8d0:	f3 2d       	mov	r31, r3
 8d2:	ff 77       	andi	r31, 0x7F	; 127
 8d4:	3f 2e       	mov	r3, r31
 8d6:	15 c0       	rjmp	.+42     	; 0x902 <vfprintf+0x1aa>
 8d8:	28 01       	movw	r4, r16
 8da:	22 e0       	ldi	r18, 0x02	; 2
 8dc:	42 0e       	add	r4, r18
 8de:	51 1c       	adc	r5, r1
 8e0:	f8 01       	movw	r30, r16
 8e2:	a0 80       	ld	r10, Z
 8e4:	b1 80       	ldd	r11, Z+1	; 0x01
 8e6:	36 fe       	sbrs	r3, 6
 8e8:	03 c0       	rjmp	.+6      	; 0x8f0 <vfprintf+0x198>
 8ea:	69 2d       	mov	r22, r9
 8ec:	70 e0       	ldi	r23, 0x00	; 0
 8ee:	02 c0       	rjmp	.+4      	; 0x8f4 <vfprintf+0x19c>
 8f0:	6f ef       	ldi	r22, 0xFF	; 255
 8f2:	7f ef       	ldi	r23, 0xFF	; 255
 8f4:	c5 01       	movw	r24, r10
 8f6:	2d d1       	rcall	.+602    	; 0xb52 <strnlen_P>
 8f8:	4c 01       	movw	r8, r24
 8fa:	f3 2d       	mov	r31, r3
 8fc:	f0 68       	ori	r31, 0x80	; 128
 8fe:	3f 2e       	mov	r3, r31
 900:	82 01       	movw	r16, r4
 902:	33 fc       	sbrc	r3, 3
 904:	19 c0       	rjmp	.+50     	; 0x938 <vfprintf+0x1e0>
 906:	82 2d       	mov	r24, r2
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	88 16       	cp	r8, r24
 90c:	99 06       	cpc	r9, r25
 90e:	a0 f4       	brcc	.+40     	; 0x938 <vfprintf+0x1e0>
 910:	b6 01       	movw	r22, r12
 912:	80 e2       	ldi	r24, 0x20	; 32
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	33 d1       	rcall	.+614    	; 0xb7e <fputc>
 918:	2a 94       	dec	r2
 91a:	f5 cf       	rjmp	.-22     	; 0x906 <vfprintf+0x1ae>
 91c:	f5 01       	movw	r30, r10
 91e:	37 fc       	sbrc	r3, 7
 920:	85 91       	lpm	r24, Z+
 922:	37 fe       	sbrs	r3, 7
 924:	81 91       	ld	r24, Z+
 926:	5f 01       	movw	r10, r30
 928:	b6 01       	movw	r22, r12
 92a:	90 e0       	ldi	r25, 0x00	; 0
 92c:	28 d1       	rcall	.+592    	; 0xb7e <fputc>
 92e:	21 10       	cpse	r2, r1
 930:	2a 94       	dec	r2
 932:	21 e0       	ldi	r18, 0x01	; 1
 934:	82 1a       	sub	r8, r18
 936:	91 08       	sbc	r9, r1
 938:	81 14       	cp	r8, r1
 93a:	91 04       	cpc	r9, r1
 93c:	79 f7       	brne	.-34     	; 0x91c <vfprintf+0x1c4>
 93e:	e1 c0       	rjmp	.+450    	; 0xb02 <vfprintf+0x3aa>
 940:	84 36       	cpi	r24, 0x64	; 100
 942:	11 f0       	breq	.+4      	; 0x948 <vfprintf+0x1f0>
 944:	89 36       	cpi	r24, 0x69	; 105
 946:	39 f5       	brne	.+78     	; 0x996 <vfprintf+0x23e>
 948:	f8 01       	movw	r30, r16
 94a:	37 fe       	sbrs	r3, 7
 94c:	07 c0       	rjmp	.+14     	; 0x95c <vfprintf+0x204>
 94e:	60 81       	ld	r22, Z
 950:	71 81       	ldd	r23, Z+1	; 0x01
 952:	82 81       	ldd	r24, Z+2	; 0x02
 954:	93 81       	ldd	r25, Z+3	; 0x03
 956:	0c 5f       	subi	r16, 0xFC	; 252
 958:	1f 4f       	sbci	r17, 0xFF	; 255
 95a:	08 c0       	rjmp	.+16     	; 0x96c <vfprintf+0x214>
 95c:	60 81       	ld	r22, Z
 95e:	71 81       	ldd	r23, Z+1	; 0x01
 960:	07 2e       	mov	r0, r23
 962:	00 0c       	add	r0, r0
 964:	88 0b       	sbc	r24, r24
 966:	99 0b       	sbc	r25, r25
 968:	0e 5f       	subi	r16, 0xFE	; 254
 96a:	1f 4f       	sbci	r17, 0xFF	; 255
 96c:	f3 2d       	mov	r31, r3
 96e:	ff 76       	andi	r31, 0x6F	; 111
 970:	3f 2e       	mov	r3, r31
 972:	97 ff       	sbrs	r25, 7
 974:	09 c0       	rjmp	.+18     	; 0x988 <vfprintf+0x230>
 976:	90 95       	com	r25
 978:	80 95       	com	r24
 97a:	70 95       	com	r23
 97c:	61 95       	neg	r22
 97e:	7f 4f       	sbci	r23, 0xFF	; 255
 980:	8f 4f       	sbci	r24, 0xFF	; 255
 982:	9f 4f       	sbci	r25, 0xFF	; 255
 984:	f0 68       	ori	r31, 0x80	; 128
 986:	3f 2e       	mov	r3, r31
 988:	2a e0       	ldi	r18, 0x0A	; 10
 98a:	30 e0       	ldi	r19, 0x00	; 0
 98c:	a3 01       	movw	r20, r6
 98e:	33 d1       	rcall	.+614    	; 0xbf6 <__ultoa_invert>
 990:	88 2e       	mov	r8, r24
 992:	86 18       	sub	r8, r6
 994:	44 c0       	rjmp	.+136    	; 0xa1e <vfprintf+0x2c6>
 996:	85 37       	cpi	r24, 0x75	; 117
 998:	31 f4       	brne	.+12     	; 0x9a6 <vfprintf+0x24e>
 99a:	23 2d       	mov	r18, r3
 99c:	2f 7e       	andi	r18, 0xEF	; 239
 99e:	b2 2e       	mov	r11, r18
 9a0:	2a e0       	ldi	r18, 0x0A	; 10
 9a2:	30 e0       	ldi	r19, 0x00	; 0
 9a4:	25 c0       	rjmp	.+74     	; 0x9f0 <vfprintf+0x298>
 9a6:	93 2d       	mov	r25, r3
 9a8:	99 7f       	andi	r25, 0xF9	; 249
 9aa:	b9 2e       	mov	r11, r25
 9ac:	8f 36       	cpi	r24, 0x6F	; 111
 9ae:	c1 f0       	breq	.+48     	; 0x9e0 <vfprintf+0x288>
 9b0:	18 f4       	brcc	.+6      	; 0x9b8 <vfprintf+0x260>
 9b2:	88 35       	cpi	r24, 0x58	; 88
 9b4:	79 f0       	breq	.+30     	; 0x9d4 <vfprintf+0x27c>
 9b6:	ae c0       	rjmp	.+348    	; 0xb14 <vfprintf+0x3bc>
 9b8:	80 37       	cpi	r24, 0x70	; 112
 9ba:	19 f0       	breq	.+6      	; 0x9c2 <vfprintf+0x26a>
 9bc:	88 37       	cpi	r24, 0x78	; 120
 9be:	21 f0       	breq	.+8      	; 0x9c8 <vfprintf+0x270>
 9c0:	a9 c0       	rjmp	.+338    	; 0xb14 <vfprintf+0x3bc>
 9c2:	e9 2f       	mov	r30, r25
 9c4:	e0 61       	ori	r30, 0x10	; 16
 9c6:	be 2e       	mov	r11, r30
 9c8:	b4 fe       	sbrs	r11, 4
 9ca:	0d c0       	rjmp	.+26     	; 0x9e6 <vfprintf+0x28e>
 9cc:	fb 2d       	mov	r31, r11
 9ce:	f4 60       	ori	r31, 0x04	; 4
 9d0:	bf 2e       	mov	r11, r31
 9d2:	09 c0       	rjmp	.+18     	; 0x9e6 <vfprintf+0x28e>
 9d4:	34 fe       	sbrs	r3, 4
 9d6:	0a c0       	rjmp	.+20     	; 0x9ec <vfprintf+0x294>
 9d8:	29 2f       	mov	r18, r25
 9da:	26 60       	ori	r18, 0x06	; 6
 9dc:	b2 2e       	mov	r11, r18
 9de:	06 c0       	rjmp	.+12     	; 0x9ec <vfprintf+0x294>
 9e0:	28 e0       	ldi	r18, 0x08	; 8
 9e2:	30 e0       	ldi	r19, 0x00	; 0
 9e4:	05 c0       	rjmp	.+10     	; 0x9f0 <vfprintf+0x298>
 9e6:	20 e1       	ldi	r18, 0x10	; 16
 9e8:	30 e0       	ldi	r19, 0x00	; 0
 9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <vfprintf+0x298>
 9ec:	20 e1       	ldi	r18, 0x10	; 16
 9ee:	32 e0       	ldi	r19, 0x02	; 2
 9f0:	f8 01       	movw	r30, r16
 9f2:	b7 fe       	sbrs	r11, 7
 9f4:	07 c0       	rjmp	.+14     	; 0xa04 <vfprintf+0x2ac>
 9f6:	60 81       	ld	r22, Z
 9f8:	71 81       	ldd	r23, Z+1	; 0x01
 9fa:	82 81       	ldd	r24, Z+2	; 0x02
 9fc:	93 81       	ldd	r25, Z+3	; 0x03
 9fe:	0c 5f       	subi	r16, 0xFC	; 252
 a00:	1f 4f       	sbci	r17, 0xFF	; 255
 a02:	06 c0       	rjmp	.+12     	; 0xa10 <vfprintf+0x2b8>
 a04:	60 81       	ld	r22, Z
 a06:	71 81       	ldd	r23, Z+1	; 0x01
 a08:	80 e0       	ldi	r24, 0x00	; 0
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	0e 5f       	subi	r16, 0xFE	; 254
 a0e:	1f 4f       	sbci	r17, 0xFF	; 255
 a10:	a3 01       	movw	r20, r6
 a12:	f1 d0       	rcall	.+482    	; 0xbf6 <__ultoa_invert>
 a14:	88 2e       	mov	r8, r24
 a16:	86 18       	sub	r8, r6
 a18:	fb 2d       	mov	r31, r11
 a1a:	ff 77       	andi	r31, 0x7F	; 127
 a1c:	3f 2e       	mov	r3, r31
 a1e:	36 fe       	sbrs	r3, 6
 a20:	0d c0       	rjmp	.+26     	; 0xa3c <vfprintf+0x2e4>
 a22:	23 2d       	mov	r18, r3
 a24:	2e 7f       	andi	r18, 0xFE	; 254
 a26:	a2 2e       	mov	r10, r18
 a28:	89 14       	cp	r8, r9
 a2a:	58 f4       	brcc	.+22     	; 0xa42 <vfprintf+0x2ea>
 a2c:	34 fe       	sbrs	r3, 4
 a2e:	0b c0       	rjmp	.+22     	; 0xa46 <vfprintf+0x2ee>
 a30:	32 fc       	sbrc	r3, 2
 a32:	09 c0       	rjmp	.+18     	; 0xa46 <vfprintf+0x2ee>
 a34:	83 2d       	mov	r24, r3
 a36:	8e 7e       	andi	r24, 0xEE	; 238
 a38:	a8 2e       	mov	r10, r24
 a3a:	05 c0       	rjmp	.+10     	; 0xa46 <vfprintf+0x2ee>
 a3c:	b8 2c       	mov	r11, r8
 a3e:	a3 2c       	mov	r10, r3
 a40:	03 c0       	rjmp	.+6      	; 0xa48 <vfprintf+0x2f0>
 a42:	b8 2c       	mov	r11, r8
 a44:	01 c0       	rjmp	.+2      	; 0xa48 <vfprintf+0x2f0>
 a46:	b9 2c       	mov	r11, r9
 a48:	a4 fe       	sbrs	r10, 4
 a4a:	0f c0       	rjmp	.+30     	; 0xa6a <vfprintf+0x312>
 a4c:	fe 01       	movw	r30, r28
 a4e:	e8 0d       	add	r30, r8
 a50:	f1 1d       	adc	r31, r1
 a52:	80 81       	ld	r24, Z
 a54:	80 33       	cpi	r24, 0x30	; 48
 a56:	21 f4       	brne	.+8      	; 0xa60 <vfprintf+0x308>
 a58:	9a 2d       	mov	r25, r10
 a5a:	99 7e       	andi	r25, 0xE9	; 233
 a5c:	a9 2e       	mov	r10, r25
 a5e:	09 c0       	rjmp	.+18     	; 0xa72 <vfprintf+0x31a>
 a60:	a2 fe       	sbrs	r10, 2
 a62:	06 c0       	rjmp	.+12     	; 0xa70 <vfprintf+0x318>
 a64:	b3 94       	inc	r11
 a66:	b3 94       	inc	r11
 a68:	04 c0       	rjmp	.+8      	; 0xa72 <vfprintf+0x31a>
 a6a:	8a 2d       	mov	r24, r10
 a6c:	86 78       	andi	r24, 0x86	; 134
 a6e:	09 f0       	breq	.+2      	; 0xa72 <vfprintf+0x31a>
 a70:	b3 94       	inc	r11
 a72:	a3 fc       	sbrc	r10, 3
 a74:	10 c0       	rjmp	.+32     	; 0xa96 <vfprintf+0x33e>
 a76:	a0 fe       	sbrs	r10, 0
 a78:	06 c0       	rjmp	.+12     	; 0xa86 <vfprintf+0x32e>
 a7a:	b2 14       	cp	r11, r2
 a7c:	80 f4       	brcc	.+32     	; 0xa9e <vfprintf+0x346>
 a7e:	28 0c       	add	r2, r8
 a80:	92 2c       	mov	r9, r2
 a82:	9b 18       	sub	r9, r11
 a84:	0d c0       	rjmp	.+26     	; 0xaa0 <vfprintf+0x348>
 a86:	b2 14       	cp	r11, r2
 a88:	58 f4       	brcc	.+22     	; 0xaa0 <vfprintf+0x348>
 a8a:	b6 01       	movw	r22, r12
 a8c:	80 e2       	ldi	r24, 0x20	; 32
 a8e:	90 e0       	ldi	r25, 0x00	; 0
 a90:	76 d0       	rcall	.+236    	; 0xb7e <fputc>
 a92:	b3 94       	inc	r11
 a94:	f8 cf       	rjmp	.-16     	; 0xa86 <vfprintf+0x32e>
 a96:	b2 14       	cp	r11, r2
 a98:	18 f4       	brcc	.+6      	; 0xaa0 <vfprintf+0x348>
 a9a:	2b 18       	sub	r2, r11
 a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <vfprintf+0x34a>
 a9e:	98 2c       	mov	r9, r8
 aa0:	21 2c       	mov	r2, r1
 aa2:	a4 fe       	sbrs	r10, 4
 aa4:	0f c0       	rjmp	.+30     	; 0xac4 <vfprintf+0x36c>
 aa6:	b6 01       	movw	r22, r12
 aa8:	80 e3       	ldi	r24, 0x30	; 48
 aaa:	90 e0       	ldi	r25, 0x00	; 0
 aac:	68 d0       	rcall	.+208    	; 0xb7e <fputc>
 aae:	a2 fe       	sbrs	r10, 2
 ab0:	16 c0       	rjmp	.+44     	; 0xade <vfprintf+0x386>
 ab2:	a1 fc       	sbrc	r10, 1
 ab4:	03 c0       	rjmp	.+6      	; 0xabc <vfprintf+0x364>
 ab6:	88 e7       	ldi	r24, 0x78	; 120
 ab8:	90 e0       	ldi	r25, 0x00	; 0
 aba:	02 c0       	rjmp	.+4      	; 0xac0 <vfprintf+0x368>
 abc:	88 e5       	ldi	r24, 0x58	; 88
 abe:	90 e0       	ldi	r25, 0x00	; 0
 ac0:	b6 01       	movw	r22, r12
 ac2:	0c c0       	rjmp	.+24     	; 0xadc <vfprintf+0x384>
 ac4:	8a 2d       	mov	r24, r10
 ac6:	86 78       	andi	r24, 0x86	; 134
 ac8:	51 f0       	breq	.+20     	; 0xade <vfprintf+0x386>
 aca:	a1 fe       	sbrs	r10, 1
 acc:	02 c0       	rjmp	.+4      	; 0xad2 <vfprintf+0x37a>
 ace:	8b e2       	ldi	r24, 0x2B	; 43
 ad0:	01 c0       	rjmp	.+2      	; 0xad4 <vfprintf+0x37c>
 ad2:	80 e2       	ldi	r24, 0x20	; 32
 ad4:	a7 fc       	sbrc	r10, 7
 ad6:	8d e2       	ldi	r24, 0x2D	; 45
 ad8:	b6 01       	movw	r22, r12
 ada:	90 e0       	ldi	r25, 0x00	; 0
 adc:	50 d0       	rcall	.+160    	; 0xb7e <fputc>
 ade:	89 14       	cp	r8, r9
 ae0:	30 f4       	brcc	.+12     	; 0xaee <vfprintf+0x396>
 ae2:	b6 01       	movw	r22, r12
 ae4:	80 e3       	ldi	r24, 0x30	; 48
 ae6:	90 e0       	ldi	r25, 0x00	; 0
 ae8:	4a d0       	rcall	.+148    	; 0xb7e <fputc>
 aea:	9a 94       	dec	r9
 aec:	f8 cf       	rjmp	.-16     	; 0xade <vfprintf+0x386>
 aee:	8a 94       	dec	r8
 af0:	f3 01       	movw	r30, r6
 af2:	e8 0d       	add	r30, r8
 af4:	f1 1d       	adc	r31, r1
 af6:	80 81       	ld	r24, Z
 af8:	b6 01       	movw	r22, r12
 afa:	90 e0       	ldi	r25, 0x00	; 0
 afc:	40 d0       	rcall	.+128    	; 0xb7e <fputc>
 afe:	81 10       	cpse	r8, r1
 b00:	f6 cf       	rjmp	.-20     	; 0xaee <vfprintf+0x396>
 b02:	22 20       	and	r2, r2
 b04:	09 f4       	brne	.+2      	; 0xb08 <vfprintf+0x3b0>
 b06:	4e ce       	rjmp	.-868    	; 0x7a4 <vfprintf+0x4c>
 b08:	b6 01       	movw	r22, r12
 b0a:	80 e2       	ldi	r24, 0x20	; 32
 b0c:	90 e0       	ldi	r25, 0x00	; 0
 b0e:	37 d0       	rcall	.+110    	; 0xb7e <fputc>
 b10:	2a 94       	dec	r2
 b12:	f7 cf       	rjmp	.-18     	; 0xb02 <vfprintf+0x3aa>
 b14:	f6 01       	movw	r30, r12
 b16:	86 81       	ldd	r24, Z+6	; 0x06
 b18:	97 81       	ldd	r25, Z+7	; 0x07
 b1a:	02 c0       	rjmp	.+4      	; 0xb20 <vfprintf+0x3c8>
 b1c:	8f ef       	ldi	r24, 0xFF	; 255
 b1e:	9f ef       	ldi	r25, 0xFF	; 255
 b20:	2b 96       	adiw	r28, 0x0b	; 11
 b22:	0f b6       	in	r0, 0x3f	; 63
 b24:	f8 94       	cli
 b26:	de bf       	out	0x3e, r29	; 62
 b28:	0f be       	out	0x3f, r0	; 63
 b2a:	cd bf       	out	0x3d, r28	; 61
 b2c:	df 91       	pop	r29
 b2e:	cf 91       	pop	r28
 b30:	1f 91       	pop	r17
 b32:	0f 91       	pop	r16
 b34:	ff 90       	pop	r15
 b36:	ef 90       	pop	r14
 b38:	df 90       	pop	r13
 b3a:	cf 90       	pop	r12
 b3c:	bf 90       	pop	r11
 b3e:	af 90       	pop	r10
 b40:	9f 90       	pop	r9
 b42:	8f 90       	pop	r8
 b44:	7f 90       	pop	r7
 b46:	6f 90       	pop	r6
 b48:	5f 90       	pop	r5
 b4a:	4f 90       	pop	r4
 b4c:	3f 90       	pop	r3
 b4e:	2f 90       	pop	r2
 b50:	08 95       	ret

00000b52 <strnlen_P>:
 b52:	fc 01       	movw	r30, r24
 b54:	05 90       	lpm	r0, Z+
 b56:	61 50       	subi	r22, 0x01	; 1
 b58:	70 40       	sbci	r23, 0x00	; 0
 b5a:	01 10       	cpse	r0, r1
 b5c:	d8 f7       	brcc	.-10     	; 0xb54 <strnlen_P+0x2>
 b5e:	80 95       	com	r24
 b60:	90 95       	com	r25
 b62:	8e 0f       	add	r24, r30
 b64:	9f 1f       	adc	r25, r31
 b66:	08 95       	ret

00000b68 <strnlen>:
 b68:	fc 01       	movw	r30, r24
 b6a:	61 50       	subi	r22, 0x01	; 1
 b6c:	70 40       	sbci	r23, 0x00	; 0
 b6e:	01 90       	ld	r0, Z+
 b70:	01 10       	cpse	r0, r1
 b72:	d8 f7       	brcc	.-10     	; 0xb6a <strnlen+0x2>
 b74:	80 95       	com	r24
 b76:	90 95       	com	r25
 b78:	8e 0f       	add	r24, r30
 b7a:	9f 1f       	adc	r25, r31
 b7c:	08 95       	ret

00000b7e <fputc>:
 b7e:	0f 93       	push	r16
 b80:	1f 93       	push	r17
 b82:	cf 93       	push	r28
 b84:	df 93       	push	r29
 b86:	fb 01       	movw	r30, r22
 b88:	23 81       	ldd	r18, Z+3	; 0x03
 b8a:	21 fd       	sbrc	r18, 1
 b8c:	03 c0       	rjmp	.+6      	; 0xb94 <fputc+0x16>
 b8e:	8f ef       	ldi	r24, 0xFF	; 255
 b90:	9f ef       	ldi	r25, 0xFF	; 255
 b92:	2c c0       	rjmp	.+88     	; 0xbec <fputc+0x6e>
 b94:	22 ff       	sbrs	r18, 2
 b96:	16 c0       	rjmp	.+44     	; 0xbc4 <fputc+0x46>
 b98:	46 81       	ldd	r20, Z+6	; 0x06
 b9a:	57 81       	ldd	r21, Z+7	; 0x07
 b9c:	24 81       	ldd	r18, Z+4	; 0x04
 b9e:	35 81       	ldd	r19, Z+5	; 0x05
 ba0:	42 17       	cp	r20, r18
 ba2:	53 07       	cpc	r21, r19
 ba4:	44 f4       	brge	.+16     	; 0xbb6 <fputc+0x38>
 ba6:	a0 81       	ld	r26, Z
 ba8:	b1 81       	ldd	r27, Z+1	; 0x01
 baa:	9d 01       	movw	r18, r26
 bac:	2f 5f       	subi	r18, 0xFF	; 255
 bae:	3f 4f       	sbci	r19, 0xFF	; 255
 bb0:	31 83       	std	Z+1, r19	; 0x01
 bb2:	20 83       	st	Z, r18
 bb4:	8c 93       	st	X, r24
 bb6:	26 81       	ldd	r18, Z+6	; 0x06
 bb8:	37 81       	ldd	r19, Z+7	; 0x07
 bba:	2f 5f       	subi	r18, 0xFF	; 255
 bbc:	3f 4f       	sbci	r19, 0xFF	; 255
 bbe:	37 83       	std	Z+7, r19	; 0x07
 bc0:	26 83       	std	Z+6, r18	; 0x06
 bc2:	14 c0       	rjmp	.+40     	; 0xbec <fputc+0x6e>
 bc4:	8b 01       	movw	r16, r22
 bc6:	ec 01       	movw	r28, r24
 bc8:	fb 01       	movw	r30, r22
 bca:	00 84       	ldd	r0, Z+8	; 0x08
 bcc:	f1 85       	ldd	r31, Z+9	; 0x09
 bce:	e0 2d       	mov	r30, r0
 bd0:	09 95       	icall
 bd2:	89 2b       	or	r24, r25
 bd4:	e1 f6       	brne	.-72     	; 0xb8e <fputc+0x10>
 bd6:	d8 01       	movw	r26, r16
 bd8:	16 96       	adiw	r26, 0x06	; 6
 bda:	8d 91       	ld	r24, X+
 bdc:	9c 91       	ld	r25, X
 bde:	17 97       	sbiw	r26, 0x07	; 7
 be0:	01 96       	adiw	r24, 0x01	; 1
 be2:	17 96       	adiw	r26, 0x07	; 7
 be4:	9c 93       	st	X, r25
 be6:	8e 93       	st	-X, r24
 be8:	16 97       	sbiw	r26, 0x06	; 6
 bea:	ce 01       	movw	r24, r28
 bec:	df 91       	pop	r29
 bee:	cf 91       	pop	r28
 bf0:	1f 91       	pop	r17
 bf2:	0f 91       	pop	r16
 bf4:	08 95       	ret

00000bf6 <__ultoa_invert>:
 bf6:	fa 01       	movw	r30, r20
 bf8:	aa 27       	eor	r26, r26
 bfa:	28 30       	cpi	r18, 0x08	; 8
 bfc:	51 f1       	breq	.+84     	; 0xc52 <__ultoa_invert+0x5c>
 bfe:	20 31       	cpi	r18, 0x10	; 16
 c00:	81 f1       	breq	.+96     	; 0xc62 <__ultoa_invert+0x6c>
 c02:	e8 94       	clt
 c04:	6f 93       	push	r22
 c06:	6e 7f       	andi	r22, 0xFE	; 254
 c08:	6e 5f       	subi	r22, 0xFE	; 254
 c0a:	7f 4f       	sbci	r23, 0xFF	; 255
 c0c:	8f 4f       	sbci	r24, 0xFF	; 255
 c0e:	9f 4f       	sbci	r25, 0xFF	; 255
 c10:	af 4f       	sbci	r26, 0xFF	; 255
 c12:	b1 e0       	ldi	r27, 0x01	; 1
 c14:	3e d0       	rcall	.+124    	; 0xc92 <__ultoa_invert+0x9c>
 c16:	b4 e0       	ldi	r27, 0x04	; 4
 c18:	3c d0       	rcall	.+120    	; 0xc92 <__ultoa_invert+0x9c>
 c1a:	67 0f       	add	r22, r23
 c1c:	78 1f       	adc	r23, r24
 c1e:	89 1f       	adc	r24, r25
 c20:	9a 1f       	adc	r25, r26
 c22:	a1 1d       	adc	r26, r1
 c24:	68 0f       	add	r22, r24
 c26:	79 1f       	adc	r23, r25
 c28:	8a 1f       	adc	r24, r26
 c2a:	91 1d       	adc	r25, r1
 c2c:	a1 1d       	adc	r26, r1
 c2e:	6a 0f       	add	r22, r26
 c30:	71 1d       	adc	r23, r1
 c32:	81 1d       	adc	r24, r1
 c34:	91 1d       	adc	r25, r1
 c36:	a1 1d       	adc	r26, r1
 c38:	20 d0       	rcall	.+64     	; 0xc7a <__ultoa_invert+0x84>
 c3a:	09 f4       	brne	.+2      	; 0xc3e <__ultoa_invert+0x48>
 c3c:	68 94       	set
 c3e:	3f 91       	pop	r19
 c40:	2a e0       	ldi	r18, 0x0A	; 10
 c42:	26 9f       	mul	r18, r22
 c44:	11 24       	eor	r1, r1
 c46:	30 19       	sub	r19, r0
 c48:	30 5d       	subi	r19, 0xD0	; 208
 c4a:	31 93       	st	Z+, r19
 c4c:	de f6       	brtc	.-74     	; 0xc04 <__ultoa_invert+0xe>
 c4e:	cf 01       	movw	r24, r30
 c50:	08 95       	ret
 c52:	46 2f       	mov	r20, r22
 c54:	47 70       	andi	r20, 0x07	; 7
 c56:	40 5d       	subi	r20, 0xD0	; 208
 c58:	41 93       	st	Z+, r20
 c5a:	b3 e0       	ldi	r27, 0x03	; 3
 c5c:	0f d0       	rcall	.+30     	; 0xc7c <__ultoa_invert+0x86>
 c5e:	c9 f7       	brne	.-14     	; 0xc52 <__ultoa_invert+0x5c>
 c60:	f6 cf       	rjmp	.-20     	; 0xc4e <__ultoa_invert+0x58>
 c62:	46 2f       	mov	r20, r22
 c64:	4f 70       	andi	r20, 0x0F	; 15
 c66:	40 5d       	subi	r20, 0xD0	; 208
 c68:	4a 33       	cpi	r20, 0x3A	; 58
 c6a:	18 f0       	brcs	.+6      	; 0xc72 <__ultoa_invert+0x7c>
 c6c:	49 5d       	subi	r20, 0xD9	; 217
 c6e:	31 fd       	sbrc	r19, 1
 c70:	40 52       	subi	r20, 0x20	; 32
 c72:	41 93       	st	Z+, r20
 c74:	02 d0       	rcall	.+4      	; 0xc7a <__ultoa_invert+0x84>
 c76:	a9 f7       	brne	.-22     	; 0xc62 <__ultoa_invert+0x6c>
 c78:	ea cf       	rjmp	.-44     	; 0xc4e <__ultoa_invert+0x58>
 c7a:	b4 e0       	ldi	r27, 0x04	; 4
 c7c:	a6 95       	lsr	r26
 c7e:	97 95       	ror	r25
 c80:	87 95       	ror	r24
 c82:	77 95       	ror	r23
 c84:	67 95       	ror	r22
 c86:	ba 95       	dec	r27
 c88:	c9 f7       	brne	.-14     	; 0xc7c <__ultoa_invert+0x86>
 c8a:	00 97       	sbiw	r24, 0x00	; 0
 c8c:	61 05       	cpc	r22, r1
 c8e:	71 05       	cpc	r23, r1
 c90:	08 95       	ret
 c92:	9b 01       	movw	r18, r22
 c94:	ac 01       	movw	r20, r24
 c96:	0a 2e       	mov	r0, r26
 c98:	06 94       	lsr	r0
 c9a:	57 95       	ror	r21
 c9c:	47 95       	ror	r20
 c9e:	37 95       	ror	r19
 ca0:	27 95       	ror	r18
 ca2:	ba 95       	dec	r27
 ca4:	c9 f7       	brne	.-14     	; 0xc98 <__ultoa_invert+0xa2>
 ca6:	62 0f       	add	r22, r18
 ca8:	73 1f       	adc	r23, r19
 caa:	84 1f       	adc	r24, r20
 cac:	95 1f       	adc	r25, r21
 cae:	a0 1d       	adc	r26, r0
 cb0:	08 95       	ret

00000cb2 <_exit>:
 cb2:	f8 94       	cli

00000cb4 <__stop_program>:
 cb4:	ff cf       	rjmp	.-2      	; 0xcb4 <__stop_program>
